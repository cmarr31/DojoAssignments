CSS Reset and Boilerplate

CSS Reset

When you add an <h1> to a web page, but don't specifically style it, that <h1> will by default have some styles associated with it. 
Below is an example:
h1

This is a good thing! An <h1> should look different from an <h2>, 
which should look different from a <p>, etc. 
The problem is there isn't a standard for what those defaults should be.

As you become more familiar with CSS, one of the terms that you'll come across is the term CSS reset. 
A CSS reset is just a term used to describe a style or a collection of styles that designers use to deal with the browser's default styles.

All browsers have default styles that will be applied to your page if not overwritten by your own styles. 
A CSS reset can nullify those styles, 
allowing you to start from scratch without having to worry about the effects the browser's default styles might have on your own designs.

The goal of a reset stylesheet is to reduce browser inconsistencies in things like default line heights, margins and font sizes of headings, and so on. 
Different browsers have different definitions of the padding and the margin properties. 

There are many reset stylesheets out there, some are more complex than the others. 
cssreset.com lists the most popular CSS reset stylesheets that you can simply grab and paste to your own website.

How to use a reset?

Grab the reset codes: Let's choose Meyer's Reset CSS 2.0. Go to http://meyerweb.com/eric/tools/css/reset/reset.css, 

copy the codes and save the codes as reset.css:
 
Paste the link to the reset in the <link> tag within the <head> tag:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Document</title>
    <link rel="stylesheet" href="reset.css">
</head>
<body>
    <h1> Hello World! </h1>
</body>
</html>
 
Note: It's important to put this stylesheet at the top before any other stylesheet loads. 
If you add it below your website's custom styles, all your hard work is undone (The reset values become the site's styling).

Pros
Consistent baseline for building styles

Cons
Setting the same properties twice - Since reset removes the default styling of an element, you have to remember to put the styling back.
Adds more workload to browsers - Resets run for every element, before beginning to apply the website's actual styling.
