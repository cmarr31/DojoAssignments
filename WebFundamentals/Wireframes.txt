Importance of Wireframes

There is no point developing the product with codes until clear wireframes are built.  
Having a clear wireframe can increase productivity by a factor of 3-5.  
One project I have seen took 9 months. 
But with proper wireframes, we have done more in 4 weeks than what the other developer did in those 9 months.

Creating wireframes are clients' way of expressing how the product should work. 
Sometimes they don't have ideas how the product should work, and therefore, it's your responsibility to help them put those thoughts in wireframes.

If you skip wireframes, some of these problems will occur:

You start working on the project, and the product owner keeps requesting changes.  
You keep going back and forth with needed changes and both parties get frustrated - this happens a lot.  
It's also very distracting as you often have to email back and forth several times during the week and it's just not an efficient process.  
You're being distracted yourself and the client is upset because we are not getting to what the client wants!

Without proper wireframes, the product owner will not know how the product should work.  
So you end up spending so much time trying to figure out what they want and trying to put it together, 
only to have them reject it, 
you revising it several times until they are either tired and agree with what you have or you eventually come up with something they think could work...

Without proper wireframes, you are going to code, revise the codes, revise again, and so forth and so forth.  
Each time they make a revision, they have to in a way write new codes, erase the old ones, and test it more.  
Each revision, therefore, takes twice (at least) the work as just writing it right the first time. 
Imagine yourself having to make 3 revisions because there were no proper wireframes.  
This would not slow down the process by 3 times, 
but more like 6-9 times because each revision required double or triple the work (compared to the first time doing it) to remove the old unnecessary codes, 
re-write the new codes, and then testing it.

Components

We like using Balsamiq.  
It's cheap and it's great.

We would recommend that you also use Balsamiq (the desktop version) 
and create a Dropbox folder where the client can work on the wireframes directly and save it there.  
You can then share the dropbox folder with the developer as well 
(we may have a folder where all the consulting projects are stored).

A great wireframe should have the following:

The name of the page (important) 
- the wireframe should specify exactly what each page will be called 
(Admin Dashboard, Student Dashboard, Admin Chapter page, etc) so that everyone calls it by the same name.  
In a lot of projects, everyone has different names for each page, which can be confusing and cause a lot of miscommunication.  
A wireframe should include the name of each page directly in the title.

It should be self-explanatory 
- if the client needs to explain how the website should work, you don't have clear wireframes.  
It should be totally obvious just by looking at the wireframe and the brief comments put there.
The URL structure (you may need help from the developer)
We would recommend that you have one Balsamiq file that has all of the needed pages so that we don't have to open multiple files.  
This is hard to do if the project is bigger but if the project is not so big, 
see if you can put it all into a single Balsamiq 
(you make the choice depending on what you think will make it easier; 
some projects we have done one Balsamiq file for each page as each page had lots of interactivity 
and required a lot of subpages to describe how different interactivity would work)

